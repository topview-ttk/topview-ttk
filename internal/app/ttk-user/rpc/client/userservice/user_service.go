// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userservice

import (
	"context"

	"topview-ttk/internal/app/ttk-user/rpc/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EmailPassLoginRequest            = user.EmailPassLoginRequest
	EmailRegisterRequest             = user.EmailRegisterRequest
	EmailVerifyCodeLoginRequest      = user.EmailVerifyCodeLoginRequest
	GitHubLoginRequest               = user.GitHubLoginRequest
	LoginResponse                    = user.LoginResponse
	PhonePassLoginRequest            = user.PhonePassLoginRequest
	PhoneRegisterRequest             = user.PhoneRegisterRequest
	PhoneVerifyCodeLoginRequest      = user.PhoneVerifyCodeLoginRequest
	RegisterResponse                 = user.RegisterResponse
	Request                          = user.Request
	Response                         = user.Response
	SendEmailVerificationCodeRequest = user.SendEmailVerificationCodeRequest
	SendPhoneVerificationCodeRequest = user.SendPhoneVerificationCodeRequest
	SendVerificationCodeResponse     = user.SendVerificationCodeResponse
	TTKPassLoginRequest              = user.TTKPassLoginRequest
	UserInfo                         = user.UserInfo

	UserService interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := user.NewUserServiceClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
