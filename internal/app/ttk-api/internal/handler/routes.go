// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"topview-ttk/internal/pkg/token"

	sso "topview-ttk/internal/app/ttk-api/internal/handler/sso"
	user "topview-ttk/internal/app/ttk-api/internal/handler/user"
	userA "topview-ttk/internal/app/ttk-api/internal/handler/userA"
	"topview-ttk/internal/app/ttk-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/sso/sendPhoneVerificationCode",
				Handler: sso.SendPhoneVerificationCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/sendEmailVerificationCode",
				Handler: sso.SendEmailVerificationCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/phoneVerifyCodeLogin",
				Handler: sso.PhoneVerifyCodeLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/emailVerifyCodeLogin",
				Handler: sso.EmailVerifyCodeLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/phonePassLogin",
				Handler: sso.PhonePassLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/emailPassLogin",
				Handler: sso.EmailPassLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/TTKIDPassLogin",
				Handler: sso.TtkidPassLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/GoogleLogin",
				Handler: sso.GoogleLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/FacebookLogin",
				Handler: sso.FacebookLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/GithubLogin",
				Handler: sso.GithubLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/StandbyGoogleLogin",
				Handler: sso.StandbyGoogleLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/StandbyFacebookLogin",
				Handler: sso.StandbyFacebookeLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/PhoneRegister",
				Handler: sso.PhoneRegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/EmailRegister",
				Handler: sso.EmailRegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/sso/RefreshToken",
				Handler: sso.RefreshTokenHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/user/info",
				Handler: user.GetUserInfoByUidHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/infoByTTKId",
				Handler: user.GetUserInfoByTTKIdHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/user/self",
				Handler: userA.GetUserInfoSelfHandler(serverCtx),
			},
		},
		rest.WithJwt(token.AccessSecret),
		rest.WithPrefix("/v1"),
	)
}
