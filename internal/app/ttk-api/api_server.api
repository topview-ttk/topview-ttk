syntax = "v1"

// 发送验证码=====
type (
	// 发送手机验证码
	SendPhoneVerificationCodeRequest {
		Phone      string `json:"phone"`
		DeviceInfo string `json:"device_info"`
		ClientInfo string `json:"client_info"`
	}
	// 发送邮箱验证码
	SendEmailVerificationCodeRequest {
		Email      string `json:"email"`
		DeviceInfo string `json:"device_info"`
		ClientInfo string `json:"client_info"`
	}
	// 发送验证码响应
	SendVerificationCodeResponse {
		StatusCode int32  `json:"status_code"`
		Message    string `json:"message"`
	}
)
// 发送验证码=====

// 登录=====
type (
	// 手机验证码登录
	PhoneVerifyCodeLoginRequest {
		Phone            string `json:"phone"`
		VerificationCode string `json:"verification_code"`
		DeviceInfo       string `json:"device_info"`
		ClientInfo       string `json:"client_info"`
	}
	// 邮箱验证码登录
	EmailVerifyCodeLoginRequest {
		Email            string `json:"email"`
		VerificationCode string `json:"verification_code"`
		DeviceInfo       string `json:"device_info"`
		ClientInfo       string `json:"client_info"`
	}
	// 手机密码登录
	PhonePassLoginRequest {
		Phone      string `json:"phone"`
		Password   string `json:"password"`
		DeviceInfo string `json:"device_info"`
		ClientInfo string `json:"client_info"`
	}
	// 邮箱密码登录
	EmailLoginRequest {
		Email      string `json:"email"`
		Password   string `json:"password"`
		DeviceInfo string `json:"device_info"`
		ClientInfo string `json:"client_info"`
	}
	// ttk_id密码登录
	TTkIDLoginRequest {
		TTkId      string `json:"ttk_id"`
		Password   string `json:"password"`
		DeviceInfo string `json:"device_info"`
		ClientInfo string `json:"client_info"`
	}
	// GitHub登录
	GithubLoginRequest {
		Token      string `json:"token"`
		DeviceInfo string `json:"device_info"`
		ClientInfo string `json:"client_info"`
	}

	// 登录响应
	LoginResponse {
		StatusCode   int32    `json:"status_code"`
		Message      string   `json:"message"`
		UserInfo     UserInfo `json:"user_info"`
		Token        string   `json:"token"`
		TokenExpires string   `json:"token_expires"`
	}
)
// 登录=====

// 注册=====
type (
	// 手机号注册请求
	PhoneRegisterRequest {
		NickName string `json:"nickname"`
		Phone    string `json:"Phone"`
		Password string `json:"password"`
	}

	// 邮箱注册请求
	EmailRegisterRequest {
		NickName string `json:"nickname"`
		Email    string `json:"email"`
		Password string `json:"password"`
	}

	// 注册响应
	RegisterResponse {
		StatusCode int32  `json:"status_code"`
		Message    string `json:"message"`
	}
)
// 注册=====

type (
	RefreshTokenRequest {
		Token string `json:"token"`
	}

	RefreshTokenResponse {
		StatusCode int32  `json:"status_code"`
		Message    string `json:"message"`
		RefToken   string `json:"ref_token"`
	}
)

type UserInfo {
	TTkId string `json:"ttk_id"`
}

@server(
	prefix: /v1
	group: sso
)
service api_server {
	//////////////////////////////// Send
	@handler SendPhoneVerificationCode
	post /sso/sendPhoneVerificationCode (SendPhoneVerificationCodeRequest) returns (SendVerificationCodeResponse)

	@handler SendEmailVerificationCode
	post /sso/sendEmailVerificationCode (SendEmailVerificationCodeRequest) returns (SendVerificationCodeResponse)
	////////////////////////////////

	//////////////////////////////// Login
	// 手机验证码登录
	@handler PhoneVerifyCodeLogin
	post /sso/phoneVerifyCodeLogin (PhoneVerifyCodeLoginRequest) returns (LoginResponse)

	// 邮箱验证码登录
	@handler EmailVerifyCodeLogin
	post /sso/emailVerifyCodeLogin (EmailVerifyCodeLoginRequest) returns (LoginResponse)

	// 手机密码登录
	@handler PhonePassLogin
	post /sso/phonePassLogin (PhonePassLoginRequest) returns (LoginResponse)

	// 邮箱密码登录
	@handler EmailPassLogin
	post /sso/emailPassLogin (EmailLoginRequest) returns (LoginResponse)

	// ttk_id密码登录
	@handler TtkidPassLogin
	post /sso/TTKIDPassLogin (TTkIDLoginRequest) returns (LoginResponse)

	// GitHub登录
	@handler GithubLogin
	post /sso/GithubLogin (GithubLoginRequest) returns (LoginResponse)
	////////////////////////////////

	//////////////////////////////// register
	// 手机号注册
	@handler PhoneRegister
	post /sso/PhoneRegister (PhoneRegisterRequest) returns (RegisterResponse)

	// 邮箱注册
	@handler EmailRegister
	post /sso/EmailRegister (EmailRegisterRequest) returns (RegisterResponse)

	@handler RefreshToken
	post /sso/RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse)
}

type (
	GetUserInfoByUidRequest {
		Uid int64 `form:"uid"`
	}
	GetUserInfoByUidResponse {
		UserInfo UserInfo `json:"user_info"`
	}

	GetUserInfoByTTKIdRequest {
		TTKId int64 `form:"ttk_id"`
	}
	GetUserInfoByTTKIdResponse {
		UserInfo UserInfo `json:"user_info"`
	}
)

@server(
	prefix: /v1
	group: user
)
service api_server {
	@handler GetUserInfoByUid
	get /user/info (GetUserInfoByUidRequest) returns (GetUserInfoByUidResponse)

	@handler GetUserInfoByTTKId
	get /user/infoByTTKId (GetUserInfoByTTKIdRequest) returns (GetUserInfoByTTKIdResponse)
}